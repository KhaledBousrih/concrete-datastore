# Generated by Django 2.2.10 on 2020-02-28 15:10

import concrete_datastore.concrete.models
import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Atelier',
            fields=[
                ('uid', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('modification_date', models.DateTimeField(auto_now=True)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('public', models.BooleanField(default=True)),
                ('name', models.CharField(blank=True, default='', max_length=250)),
                ('import_id', models.IntegerField(blank=True, default=0)),
                ('alias', models.CharField(blank=True, default='', max_length=250)),
            ],
            options={
                'verbose_name': 'Atelier',
                'verbose_name_plural': 'Ateliers',
                'ordering': ('-modification_date', '-creation_date'),
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('uid', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('modification_date', models.DateTimeField(auto_now=True)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('public', models.BooleanField(default=True)),
                ('name', models.CharField(default='', max_length=250)),
                ('archived', models.BooleanField(default='False')),
                ('import_id', models.IntegerField(blank=True, default=0)),
                ('key', models.CharField(blank=True, default='', max_length=250)),
            ],
            options={
                'verbose_name': 'Category',
                'verbose_name_plural': 'Categorys',
                'ordering': ('-modification_date', '-creation_date'),
            },
        ),
        migrations.CreateModel(
            name='DefaultDivider',
            fields=[
                ('uid', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('name', models.CharField(default='Default Divider', max_length=250)),
            ],
        ),
        migrations.CreateModel(
            name='DeletedModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uid', models.UUIDField()),
                ('model_name', models.CharField(default='', max_length=255)),
                ('modification_date', models.DateTimeField(auto_now=True)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Email',
            fields=[
                ('uid', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('modification_date', models.DateTimeField(auto_now=True)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('public', models.BooleanField(default=False)),
                ('subject', models.CharField(blank=True, default='', max_length=250)),
                ('resource_status', models.CharField(blank=True, choices=[('to-send', 'Email should be sent'), ('send-in-progress', 'Email sending'), ('send-error', 'Error during sending'), ('sent', 'Email sent')], default='to-send', max_length=250)),
                ('resource_message', models.CharField(blank=True, default='', max_length=250)),
                ('body', models.TextField(blank=True, default='')),
                ('additional_filtering', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'Email',
                'verbose_name_plural': 'Emails',
                'ordering': ('-modification_date', '-creation_date'),
            },
        ),
        migrations.CreateModel(
            name='EmailDevice',
            fields=[
                ('name', models.CharField(help_text='The human-readable name of this device.', max_length=64)),
                ('confirmed', models.BooleanField(default=True, help_text='Is this device ready for use?')),
                ('uid', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('key', models.CharField(default=concrete_datastore.concrete.models.default_key, help_text='A hex-encoded secret key of up to 20 bytes.', max_length=80, validators=[concrete_datastore.concrete.models.key_validator])),
                ('email', models.CharField(default='', help_text='Email address to send verification code.', max_length=250)),
                ('modification_date', models.DateTimeField(auto_now=True)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='HelpText',
            fields=[
                ('uid', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('modification_date', models.DateTimeField(auto_now=True)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('public', models.BooleanField(default=True)),
                ('name', models.CharField(blank=True, default='', max_length=250)),
                ('content', models.TextField(blank=True, default='')),
                ('display', models.BooleanField()),
            ],
            options={
                'verbose_name': 'HelpText',
                'verbose_name_plural': 'HelpTexts',
                'ordering': ('-modification_date', '-creation_date'),
            },
        ),
        migrations.CreateModel(
            name='Intervention',
            fields=[
                ('uid', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('modification_date', models.DateTimeField(auto_now=True)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('public', models.BooleanField(default=False)),
                ('start_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('pause_dates', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default=dict)),
                ('latitude', models.FloatField()),
                ('longitude', models.FloatField()),
                ('task_duration_in_seconds', models.IntegerField(blank=True, default='0')),
                ('finished', models.BooleanField(default=False)),
                ('geolocation_accuracy', models.FloatField(default='0')),
                ('comment', models.TextField(blank=True, default='RAS')),
                ('completed_with_success', models.BooleanField(default='True')),
                ('valid', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Intervention',
                'verbose_name_plural': 'Interventions',
                'ordering': ('-modification_date', '-creation_date'),
            },
        ),
        migrations.CreateModel(
            name='LieuPrimaire',
            fields=[
                ('uid', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('modification_date', models.DateTimeField(auto_now=True)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('public', models.BooleanField(default=True)),
                ('name', models.CharField(blank=True, default='', max_length=250)),
                ('import_id', models.IntegerField(blank=True, default=0)),
                ('location_code', models.IntegerField(blank=True, default=0)),
                ('name_ascii', models.CharField(blank=True, default='', max_length=250)),
                ('latitude', models.FloatField(blank=True, null=True)),
                ('longitude', models.FloatField(blank=True, null=True)),
                ('country_iso_code', models.CharField(blank=True, default='FR', max_length=250)),
            ],
            options={
                'verbose_name': 'LieuPrimaire',
                'verbose_name_plural': 'LieuPrimaires',
                'ordering': ('-modification_date', '-creation_date'),
            },
        ),
        migrations.CreateModel(
            name='LieuSecondaire',
            fields=[
                ('uid', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('modification_date', models.DateTimeField(auto_now=True)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('public', models.BooleanField(default=True)),
                ('code_gare', models.CharField(blank=True, default='', max_length=250)),
                ('libelle_lieu', models.CharField(blank=True, default='', max_length=250)),
                ('latitude', models.FloatField()),
                ('longitude', models.FloatField()),
                ('libelle_gare', models.CharField(blank=True, default='', max_length=250)),
                ('code_lieu', models.CharField(blank=True, default='', max_length=250)),
                ('import_id', models.IntegerField(blank=True, default=0)),
            ],
            options={
                'verbose_name': 'LieuSecondaire',
                'verbose_name_plural': 'LieuSecondaires',
                'ordering': ('-modification_date', '-creation_date'),
            },
        ),
        migrations.CreateModel(
            name='PasswordChangeToken',
            fields=[
                ('uid', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('expiry_date', models.DateTimeField(default=concrete_datastore.concrete.models.compute_pwd_change_token_expiry)),
            ],
        ),
        migrations.CreateModel(
            name='SecureConnectToken',
            fields=[
                ('value', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('modification_date', models.DateTimeField(auto_now=True)),
                ('expired', models.BooleanField(default=False)),
                ('mail_sent', models.BooleanField(default=False)),
                ('url', models.URLField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('uid', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('modification_date', models.DateTimeField(auto_now=True)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('public', models.BooleanField(default=True)),
                ('name', models.CharField(blank=True, default='', max_length=250)),
                ('archived', models.BooleanField(default='False')),
                ('import_id', models.IntegerField(blank=True, default=0)),
                ('average_duration', models.IntegerField(blank=True, default='0')),
                ('estimated_duration', models.IntegerField(blank=True, default='0')),
            ],
            options={
                'verbose_name': 'Task',
                'verbose_name_plural': 'Tasks',
                'ordering': ('-modification_date', '-creation_date'),
            },
        ),
        migrations.CreateModel(
            name='TemporaryToken',
            fields=[
                ('key', models.CharField(max_length=40, primary_key=True, serialize=False, verbose_name='Key')),
                ('expired', models.BooleanField(default=False)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('modification_date', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Temporary Token',
                'verbose_name_plural': 'Temporary Tokens',
            },
        ),
        migrations.CreateModel(
            name='UserConfirmation',
            fields=[
                ('uid', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('confirmed', models.BooleanField(default=False)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('modification_date', models.DateTimeField(auto_now=True)),
                ('redirect_to', models.URLField(null=True)),
                ('link_sent', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Usine',
            fields=[
                ('uid', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('modification_date', models.DateTimeField(auto_now=True)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('public', models.BooleanField(default=True)),
                ('name', models.CharField(blank=True, default='', max_length=250)),
                ('import_id', models.IntegerField(blank=True, default=0)),
                ('key', models.CharField(blank=True, default='', max_length=250)),
            ],
            options={
                'verbose_name': 'Usine',
                'verbose_name_plural': 'Usines',
                'ordering': ('-modification_date', '-creation_date'),
            },
        ),
    ]
